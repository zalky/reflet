
@use "sass:color";

@import "config";


// Bootstrap

@import "bootstrap/scss/bootstrap";
@import "bootstrap/scss/bootstrap-grid";
@import "bootstrap/scss/bootstrap-reboot";


// Main

body {
    color: $font-color;
}

* {
    &:focus, &:hover, &:active {
        outline: none !important;
    }
}

.app {
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100vw;

    > :first-child {
        background: linear-gradient(120deg, rgba(255,255,255,1) 20%, rgba(255,255,255,0) 50%),
                    linear-gradient(240deg, rgba(255,255,255,1) 20%, rgba(255,255,255,0) 50%),
                    linear-gradient(0deg, rgba(0,0,0,0.02), rgba(0,0,0,0) 50%);
        padding-bottom: 1rem;
    }

    .header {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 10rem;
        font-size: 4rem;
        font-weight: 200;
    }

    .menu {
        justify-content: center;

        > .nav-item {
            user-select: none;
            cursor: pointer;
        }
    }
}

.view {
    position: relative;
    flex: 1;
}

.player, .workflow {
    width: 30rem;
    position: absolute;
    top: 30%;
    left: 50%;
    transform: translate(-50%, 0);
}

.player {
    .btn-toolbar .btn {
        width: 5rem;
    }

    .btn-toolbar > :last-child {
        flex: 1;
        margin-left: 0.5rem;
        border-radius: $border-radius;
        background: $card-bg;
    }

    &-track-list {
        display: grid;
        grid-template-columns: 0.75fr 2fr auto;
        gap: 1rem 1rem;
        padding: 0.5rem 1rem;
        border-radius: $border-radius;
        overflow: hidden;
        transition: all 0.3s ease;
        transform: scaleY(0);
        transform-origin: top;
        opacity: 0;

        .selecting & {
            transform: scaleY(1);
            opacity: 1;
        }

        > div {
            display: contents;

            &:hover > div {
                background: color.scale($card-bg, $lightness: -2%);
            }

            > div {
                margin: -0.5rem -1rem;
                padding: 0.5rem 1rem;
                overflow: hidden;
                white-space: nowrap;
                background: $card-bg;
                cursor: pointer;
            }
        }

        > div > :last-child {
            text-align: right;
        }

        > :nth-child(2n) > div {
            background: color.scale($card-bg, $lightness: 50%);
        }
    }
}

.workflow {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    top: 15%;
    user-select: none;

    &-progress {
        display: grid;
        // grid-template-columns property is dynamically set in cljs
        grid-column-gap: 4px;
        justify-content: center;
        margin: 1.5rem 0;

        > &-step {
            position: relative;

            > :last-child {
                position: absolute;
                width: fit-content;
                margin-left: 10px;
                transform: translate(-50%, -250%);
                font-size: $font-size-sm;
                white-space: nowrap;

                &.active {
                    transform: translate(-50%, -215%);
                    font-size: $font-size;
                }
            }
        }
    }

    &-check, &-step {
        display: flex;

        > svg {
            width: 20px;
        }
    }

    &-check > svg {
        cursor: pointer;
    }

    &-line {
        width: 80px;
    }

    &-done {
        display: flex;
        justify-content: center;
        font-size: $font-size-lg;
    }

    &-form {
        display: grid;
        grid-template-columns: min-content min-content;
        grid-column-gap: 2rem;
        margin-top: 2rem;
        padding: 2rem;
        border-radius: $border-radius;
        background: $gray-100;
    }

    &-required {
        grid-column: 1 / span 2;
        text-align: center;
        margin-bottom: 1rem;
        font-size: $font-size-sm;
        font-family: $font-family-monospace;

        > :not(:last-child) {
            margin-right: 0.5rem;
        }
    }

    &-label {
        display: flex;
        justify-content: right;

        > :not(:last-child) {
            margin-right: 0.5rem;
        }
    }
}

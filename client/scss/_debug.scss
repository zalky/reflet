
$debug-mark-color:              color.adjust($blue, $lightness: 15);
$debug-marks-bg:                rgba(236, 247, 255, 94%); // rgba(236, 251, 255, 94%);
$debug-radius:                  8px;
$debug-panel-radius:            2 * $debug-radius;
$debug-stack-height:            8px;
$debug-border-thickness:        2px;
$debug-panel-border:            $debug-border-thickness solid $debug-mark-color;
$debug-panel-inner-border:      1px solid color.adjust($debug-mark-color, $alpha: -0);

$syntax-keyword-namespace:      #9167db;
$syntax-keyword-name:           #cb49f1;
$syntax-ref:                    $blue;

$control-fade:                  -0.3;

.reflet-tap {
    display: none;
}

.reflet-node {
    position: fixed;
}

.reflet-group, .reflet-mark {
    position: relative;
    transform: translate($debug-radius, $debug-radius + $debug-stack-height);
    user-select: none;
    color: $debug-mark-color;
    transition: color 0.3s ease;

    svg {
        width: 16px;

        path {
            transition: all 0.3s linear;
            opacity: 1;
            visibility: visible;
        }
    }

    .reflet-mark-expanded {
        position: absolute;
        display: grid;
        grid-template-columns: (2 * $debug-radius) auto;
        grid-template-rows: (2 * $debug-radius + $debug-stack-height);
        align-items: start;
        width: fit-content;
        height: fit-content;

        padding: $debug-radius;
        padding-right: $debug-radius * 2;
        padding-bottom: 0;
        margin-left: -$debug-radius;
        margin-top: -$debug-radius;
        border-top-left-radius: 2 * $debug-radius;
        border-bottom-left-radius: 2 * $debug-radius;
        border-top-right-radius: 2 * $debug-radius;
        border-bottom-right-radius: 2 * $debug-radius;

        $shadow: color.adjust($body-color, $alpha: -0.2);
        background: $debug-marks-bg;
        font-size: $font-size-xs;

        transition: all 0.3s linear;
        visibility: hidden;
        opacity: 0;

        > div {
            display: contents;
            cursor: pointer;

            &:hover > * {
                color: $blue;
            }

            > :nth-child(2n) {
                padding-left: 1rem;
                cursor: pointer;
            }
        }

        > * {
            white-space: nowrap;
        }
    }

    &:hover {
        > svg path {
            opacity: 0;
            visibility: hidden;
        }

        .reflet-mark-expanded {
            visibility: visible;
            opacity: 1;
        }
    }
}

.reflet-panel {
    position: fixed;
    width: 18rem;
    min-width: 3rem;
    min-height: 3rem;

    border: $debug-panel-border;
    border-radius: $debug-panel-radius;
    box-shadow: 0 0 80px rgba(0, 0, 0, 0.07);
    transform-style: preserve-3d;
    color: $blue;
    font-size: $font-size-xs;

    $shadow-offset: 4px + $debug-border-thickness;

    &-shadow:nth-child(3) {
        position: absolute;
        width: 100%;
        height: 100%;
        top: $shadow-offset;
        left: $shadow-offset;
        border-radius: $debug-panel-radius + $shadow-offset / 2;
        background: rgba(182, 223, 255, 50%); //rgba(182, 235, 255, 50%);
        transform: translateZ(-2px);
    }

    &-shadow:nth-child(4) {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        border-radius: $debug-panel-radius - $debug-border-thickness;
        background: rgba(255, 255, 255, 50%);
        transform: translateZ(-1px);
    }

    &-shadow:nth-child(5) {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        border-radius: $debug-panel-radius - $debug-border-thickness;
        background: rgba(255, 255, 255, 97%);
        transform: translateZ(-3px);
    }

    &-handle {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 16px;
        height: 16px;
        transition: all 0.3s ease;
        opacity: 0;

        &:hover {
            opacity: 1;
            cursor: nwse-resize;
        }
    }
}

.reflet-header {
    display: flex;
    position: sticky;
    top: 0;
    left: 0;
    padding: 0.25rem 0.75rem;
    border-top-left-radius: $debug-panel-radius - $debug-border-thickness;
    border-top-right-radius: $debug-panel-radius - $debug-border-thickness;
    border-bottom: $debug-panel-inner-border;
    background: $body-color;
    z-index: 1;
    cursor: default;
    user-select: none;

    &.reflet-dragging {
        cursor: grabbing;
    }

    > :first-child {
        flex: 1 1 auto;
        overflow: hidden;
        white-space: nowrap;
        margin-right: 0.5rem;
    }
}

.reflet-control {
    width: 0.5rem;
    transition: all 0.3s ease;
    cursor: pointer;
    color: color.adjust($blue, $alpha: $control-fade);
    flex: 0 0 auto;

    &:hover {
        color: $blue;
    }
}

.reflet-refs {
    display: flex;
    flex-direction: column;
}

.reflet-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    overflow-y: scroll;

    > *:not(.reflet-header) {
        padding: 0.75rem;
    }

    > :not(:first-child, :nth-child(2)) {
        border-top: $debug-panel-inner-border;
    }
}

// Data formatting

.reflet-map, .reflet-vec, .reflet-set {
    display: grid;
    grid-template-columns: 6px auto;
    align-items: center;

    &::before {
        display: flex;
        justify-self: right;
        align-self: start;
        font-family: $font-family-monospace;
        font-weight: 700;
        white-space: nowrap;
    }
}

.reflet-map-data {
    display: grid;
    position: relative;
    grid-template-columns: 1fr auto;
    column-gap: 0.5rem;
    padding: 0 0.1rem;
    font-family: $font-family-monospace;
    color: $font-color;

    > div {
        display: contents;
        overflow: hidden;

        > :nth-child(2) {
            justify-self: end;
        }
    }
}

.reflet-map::before {
    content: "{";
}

.reflet-vec::before {
    content: "[";
}

.reflet-set::before {
    content: "\#{";
}

.reflet-ref {
    color: $syntax-ref;

    :not(.reflet-header) > & {
        cursor: pointer;
    }
}

.reflet-keyword {
    white-space: nowrap;

    > :first-child {
        color: $syntax-keyword-namespace;
    }

    > :last-child {
        color: $syntax-keyword-name;
    }
}

.reflet-string {
    color: #9f9dfa;
}

.reflet-number {
    color: #8b8ab8;
}

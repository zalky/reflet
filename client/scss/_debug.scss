
$debug-mark-color:              color.adjust($blue, $alpha: -0.3);
$debug-radius:                  8px;
$debug-border-thickness:        2px;
$debug-panel-border:            $debug-border-thickness solid color.adjust($blue, $alpha: -0);
$debug-panel-inner-border:      1px solid color.adjust($blue, $alpha: -0);
$debug-panel-drop-shadow-color: color.adjust($blue, $alpha: -0.65);

$syntax-keyword-namespace:      #9167db;
$syntax-keyword-name:           #cb49f1;
$syntax-ref:                    $blue;

$control-fade:                  -0.3;

.reflet-tap {
    display: none;
}

.reflet-mark, .reflet-group {
    position: fixed;
    color: $debug-mark-color;
    width: 16px;
    height: 16px;
    transform: translate(8px, 8px);
    cursor: pointer;
    transition: all 0.3s ease;
    user-select: none;

    &:hover {
        transform: translate(8px, 8px) scale(1.25, 1.25);
    }
}

.reflet-panel {
    position: fixed;
    width: 15rem;
    min-width: 3rem;
    min-height: 3rem;
    border: $debug-panel-border;
    border-radius: $debug-radius;
    box-shadow: 0 0 80px rgba(0, 0, 0, 0.07);
    transform-style: preserve-3d;
    background: $body-color;
    color: $blue;
    font-size: $font-size-xs;

    $shadow-offset: 4px + $debug-border-thickness;

    &-shadow {
        position: absolute;
        width: 100%;
        height: 100%;
        top: $shadow-offset;
        left: $shadow-offset;
        border-radius: $debug-radius + $shadow-offset / 2;
        background: $debug-panel-drop-shadow-color;
        transform: translateZ(-4px);
    }

    &-handle {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 12px;
        height: 12px;
        transition: all 0.3s ease;
        opacity: 0;

        &:hover {
            opacity: 1;
            cursor: nwse-resize;
        }
    }
}

.reflet-header {
    display: flex;
    position: sticky;
    top: 0;
    left: 0;
    padding: 0.25rem 0.75rem;
    border-top-left-radius: $debug-radius;
    border-top-right-radius: $debug-radius;
    border-bottom: $debug-panel-inner-border;
    background: $body-color;
    z-index: 1;
    cursor: default;
    user-select: none;

    &.reflet-dragging {
        cursor: grabbing;
    }

    > :first-child {
        flex: 1 1 auto;
        overflow: hidden;
        white-space: nowrap;
        margin-right: 0.5rem;
    }
}

.reflet-control {
    width: 0.5rem;
    transition: all 0.3s ease;
    cursor: pointer;
    color: color.adjust($blue, $alpha: $control-fade);
    flex: 0 0 auto;

    &:hover {
        color: $blue;
    }
}

.reflet-refs {
    display: flex;
    flex-direction: column;
}

.reflet-content {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    overflow-y: scroll;

    > *:not(.reflet-header) {
        padding: 0.75rem;
    }

    > :not(:first-child, :nth-child(2)) {
        border-top: $debug-panel-inner-border;
    }
}

// Data formatting

.reflet-map, .reflet-vec, .reflet-set {
    display: grid;
    grid-template-columns: 6px auto;
    align-items: center;

    &::before {
        display: flex;
        justify-self: right;
        align-self: start;
        font-family: $font-family-monospace;
        font-weight: 700;
        white-space: nowrap;
    }
}

.reflet-map-data {
    display: grid;
    position: relative;
    grid-template-columns: 1fr auto;
    padding: 0 0.1rem;
    font-family: $font-family-monospace;

    > div {
        display: contents;
        overflow: hidden;
    }
}

.reflet-map::before {
    content: "{";
}

.reflet-vec::before {
    content: "[";
}

.reflet-set::before {
    content: "\#{";
}

.reflet-ref {
    color: $syntax-ref;
    cursor: pointer;
}

.reflet-keyword {
    > :first-child {
        color: $syntax-keyword-namespace;
    }

    > :last-child {
        color: $syntax-keyword-name;
    }
}
